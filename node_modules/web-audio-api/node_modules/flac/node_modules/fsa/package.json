{
  "name": "fsa",
  "author": {
    "name": "Golubev Fedor",
    "email": "gregof@yandex.ru",
    "url": "http://github.com/gregof"
  },
  "description": "File system auditor. Shows changes after previous audit session.",
  "version": "0.5.1",
  "dependencies": {},
  "devDependencies": {
    "abc": "0.5.x",
    "tc": "0.5.x"
  },
  "optionalDependencies": {},
  "engines": {
    "node": ">=0.4"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/gregof/fsa.git"
  },
  "main": "./index.js",
  "readme": "# fsa\nFile system auditor. Shows changes after previous audit session. Works over git.\n\n## Example\nGet hash for each file in current directory.\n```javascript\nvar fsa = require('fsa');\nvar abc = require('abc');\nvar crypto = require('crypto');\nvar path = require('path');\n\nvar startDate = new Date();\nvar dc = new fsa.DirCache('.', '.exmpl');\n\ndc.load(function (data, changeManager) {\n    processDir(data, changeManager, function (newData) {\n        dc.save(newData, function () {\n            console.log(JSON.stringify(newData, null, '  '))\n            console.log('Done. Time - ' + (new Date() - startDate));\n        })\n    });\n});    \n\nfunction processDir (cachedData, changeManager, callback) {\n    var newData = [];\n    abc.async.forEach(\n        [\n            function (callback) {\n                if (cachedData) {\n                    checkCachedFiles(cachedData, changeManager, newData, callback)\n                } else {\n                    callback();\n                }\n            },\n            function (callback) {\n                readFiles(changeManager.getAddedFiles(), newData, callback)\n            },\n            function (callback) {\n                readDirs(changeManager.getAddedDirs(), newData, callback)\n            }\n        ], \n        function () {\n            callback(newData);\n        }\n    );    \n}\n\nfunction checkCachedFiles (cachedData, changeManager, newData, callback) {\n    abc.async.forEach(\n        cachedData,\n        function (file, callback) {\n            var fileStatus = changeManager.getFileStatus(file.name);\n            if (fileStatus === 'M') {\n                readFile(file.name, function (rereadFile) {\n                    newData.push(rereadFile);\n                    callback();\n                })\n                return;\n            } else if (fileStatus === '-') {\n                newData.push(file);\n            }\n            callback();\n        },\n        callback\n    );\n}\n\nfunction readFile (file, callback) {\n    abc.file.read(file, function (text) {\n        callback({\n            name: file,\n            hash: crypto.createHash('md5').update(text).digest('hex')\n        });\n    })\n}\n\nfunction readFiles (files, newData, callback) {\n    abc.async.forEach(\n        files,\n        function (file, callback) {\n            readFile(file, function (readedFile) {\n                newData.push(readedFile);\n                callback();\n            })\n        },\n        callback\n    );\n}\n\nfunction readDirs (dirs, newData, callback) {\n    abc.async.forEach(\n        dirs,\n        function (dir, callback) {\n            readDir(dir, newData, callback);\n        },\n        callback\n    );\n}\n\nfunction readDir (dir, newData, callback) {\n    var newFiles = []\n    abc.find(\n        dir,\n        function (file, dirPath) {\n            newFiles.push(path.join(dirPath, file))\n        },\n        function () {\n            readFiles(newFiles, newData, callback);\n        }\n    );\n}\n```",
  "_id": "fsa@0.5.1",
  "dist": {
    "shasum": "c5552c80563dda02f8c683ecac9f57c1951613db",
    "tarball": "https://registry.npmjs.org/fsa/-/fsa-0.5.1.tgz"
  },
  "_npmVersion": "1.1.59",
  "_npmUser": {
    "name": "gregof",
    "email": "gregof@yandex.ru"
  },
  "maintainers": [
    {
      "name": "gregof",
      "email": "gregof@yandex.ru"
    }
  ],
  "directories": {},
  "_shasum": "c5552c80563dda02f8c683ecac9f57c1951613db",
  "_resolved": "https://registry.npmjs.org/fsa/-/fsa-0.5.1.tgz",
  "_from": "fsa@>=0.5.0 <0.6.0"
}
